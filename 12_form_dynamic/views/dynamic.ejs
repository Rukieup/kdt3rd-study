<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta 
  name="viewport" 
  content="width=
  , initial-scale=1.0"
  >

  <!-- jquery cdn (for AJAX)-->
  <script
   src="https://code.jquery.com/jquery-3.6.1.min.js"
   integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ="
   crossorigin="anonymous"
  ></script>

  <!-- axios cdn -->
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <title>Document</title>
</head>
<body>
  <h1><%= title %></h1>

  <form name="register">
    <label for="name">이름</label>
    <input type="text" id="name" name="name" required>

    <br>
    <label for="gender">성별</label>
    <input type="radio" name="gender" id="gender" value="m" required>남자
    <input type="radio" name="gender" id="gender" value="f">여자
    <br>
    
    <button type="button" onclick="ajaxGet();">ajax get 제출</button>
    <button type="button" onclick="ajaxPost();">ajax post 제출</button>
    <br>
    <button type="button" onclick="axiosGet();">ajax get 제출</button>
    <button type="button" onclick="axiosPost();">ajax post 제출</button>
    <br>
    <button type="button" onclick="fetchGet();">fetch get 제출</button>
    <button type="button" onclick="fetchPost();">fetch post 제출</button>
    
  </form>
    

  <div class="result"></div>

  <script>
    const resultBox = document.querySelector('.result');

    function ajaxGet() {
      console.log('####### click ajaxGet');

      // 폼 선택하기
      const form = document.forms['register'];
      
      // 폼 객체 요소 및 요소값 확인하기
      console.dir(form);
      console.dir(form.name); 
      console.dir(form.gender);
      console.dir(form.name.value);
      console.dir(form.gender.value);

      const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // AJAX 비동기 통신 - GET /ajax 요청 보내기
        $.ajax({
          type: 'GET', // 요청 종류
          url: '/ajax', // 요청할 서버 주소
          data: data, // 보낼 데이터
          success: function (data) {
            // data: app.js의 req.query
            console.log('ajax get: ',data);
            resultBox.textContent = `GET /ajax 요청 완료!! ${data.name}님은 ${data.gender}이시군요`
            resultBox.style.color = 'blue';
          },
        });
      }
    
    function ajaxPost() {
      console.log('####### click ajaxPost')
    
      // 폼 선택하기
      const form = document.forms['register'];

      // 폼 요소값 확인하기
      console.dir(form);
      console.dir(form.name);
      console.dir(form.gender);
      console.dir(form.name.value);
      console.dir(form.gender.value);
    
      const data = {
        name: form.name.value,
        gender: form.gender.value
      }

      // AJAX 비동기 통신 - POST /ajax 요청 보내기
      $.ajax({
        type: 'POST',
        url: '/ajax', // 주소가 같더라도 요청 방식이 다르면 서버는 다르게 인식함
        data: data,
        success: function (data) {
          // data: app.js의 req.body
          console.log(data);
          resultBox.textContent = `POST /ajax 요청 완료!! ${data.name}님은 ${data.gender}이시군요`
          resultBox.style.color = 'blue';

        }
      })
    }

    function axiosGet() {
      console.log('##### click axiosGet ######')
    
      const form = document.forms['register'];

      console.log('여기여기',form.name.checkValidity());
      console.log('여기여기',form.gender[0].checkValidity());

      const data = {
        name: form.name.value,
        gender: form.gender.value,
      };

      // AXIOS 비동기 통신 - GET /axios 요청
      // 사용자의 입력이 올바르지 않다면, axios 요청 시도 x
      // 사용자의 입력이 올바르다면, axios 요청 시도

      if ( form.name.checkValidity() === true &&
          form.gender[0].checkValidity()) {
       // (form.name.checkValidity() === true && form.gender[0].checkValidity()){
        axios({
          method: 'GET',
          url : '/aixos',
          params: data, // GET 요청은 'PARAMS'에 정보를 실어서 보내야 함
        }).then(function (response) {
          // axios는 promise를 반환한다! -> 서버의 응답결과
          console.log(response); // 서버의 응답결과
          console.log(response.data); // res.send(req.query)
          
          resultBox.textContent = `GET /axios 요청 완료!! ${data.name}님은 ${data.gender}이시군요`
          resultBox.style.color = 'green';   
        });
      } else {
          resultBox.textContent = '입력값을 올바르게 채워주세요';
          resultBox.style.color = 'red';   
    }
    }
    function axiosPost() {
      console.log('##### click axiosPost ######');

      const form = document.forms['register'];
      const data = {
        name: form.name.value,
        gender: form.gender.value,
      }

      axios({
        method: 'POST',
        url: '/axios',
        data: data, // Post 요청은 "data"를 정보에 실어서 보내야 함
      }).then(function (response) {
        console.log(response)
        console.log(response.data)

        resultBox.textContent = `POST /axios 요청 완료!! ${data.name}님은 ${data.gender}이시군요`
        resultBox.style.color = 'gold';
      })
    }

    //fetch(url, option)
    function fetchGet() {
      console.log('###### click fetchGet ######');

      const form = document.forms['register'];
      
      fetch(`/fetch?name=${form.name.value}&gender=${form.gender.value}`, {
        method: 'GET',
    }).then(function (response) {
      console.log(response);
      return response.json();
    })
      .then(function (data) {
        console.log(data);
        resultBox.textContent = `GET / fetch 요청 완료!! ${data.name}님은
                                ${data.gender}이시죠? ㅎㅎ`;
        resultBox.style.color = 'limegreen'
      })
    }

    function fetchPost() {
      console.log('###### click fetchPost ######');

      const form = document.forms['register'];
      const data = {
        name: form.name.value,
        gender: form.gender.value,
      };

      // fetch(url, option).then().then()
      fetch('/fetch', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      }).then(function (response) {
        console.log(response);
        return response.json();
      })
        .then(function (data) {
          console.log(data);
          resultBox.textContent = `POST / fetch 요청 완료!! ${data.name}님은
                                ${data.gender}이시죠? ㅎㅎ`;
          resultBox.style.color = 'pink'
        })
    }

  </script>
</body>
</html>